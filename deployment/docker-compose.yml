version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3000
      - DB_HOST=db
      - DB_USER=${DB_USER:-fangemeinschaft}
      - DB_PASSWORD=${DB_PASSWORD:-fangemeinschaft}
      - DB_NAME=${DB_NAME:-fangemeinschaft}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mariadb:latest
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MARIADB_DATABASE=${DB_NAME:-fangemeinschaft}
      - MARIADB_USER=${DB_USER:-fangemeinschaft}
      - MARIADB_PASSWORD=${DB_PASSWORD:-fangemeinschaft}
    volumes:
      - mariadb-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ../dist:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - app-network

volumes:
  mariadb-data:
    driver: local

networks:
  app-network:
    driver: bridge