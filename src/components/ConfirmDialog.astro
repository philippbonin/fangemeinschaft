---
interface Props {
  title?: string;
  message?: string;
  confirmText?: string;
  cancelText?: string;
}

const {
  title = "Bestätigung",
  message = "Sind Sie sicher, dass Sie diesen Eintrag löschen möchten?",
  confirmText = "Löschen",
  cancelText = "Abbrechen"
} = Astro.props;
---

<div id="confirmDialog" class="fixed inset-0 bg-black bg-opacity-50 z-50 items-center justify-center hidden">
  <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 p-6">
    <h3 class="text-lg font-bold mb-4">{title}</h3>
    <p class="text-gray-600 mb-6">{message}</p>
    <div class="flex justify-end space-x-4">
      <button
        type="button"
        id="cancelButton"
        class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
      >
        {cancelText}
      </button>
      <button
        type="button"
        id="confirmButton"
        class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors"
      >
        {confirmText}
      </button>
    </div>
  </div>
</div>

<script>
  let currentForm: HTMLFormElement | null = null;
  const dialog = document.getElementById('confirmDialog');
  const confirmButton = document.getElementById('confirmButton');
  const cancelButton = document.getElementById('cancelButton');

  // Add click handlers to all delete forms
  document.querySelectorAll('form[data-confirm]').forEach(form => {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      currentForm = e.target as HTMLFormElement;
      if (dialog) {
        dialog.classList.remove('hidden');
        dialog.classList.add('flex');
      }
    });
  });

  // Confirm button handler
  confirmButton?.addEventListener('click', () => {
    if (currentForm) {
      currentForm.submit();
    }
    if (dialog) {
      dialog.classList.add('hidden');
      dialog.classList.remove('flex');
    }
  });

  // Cancel button handler
  cancelButton?.addEventListener('click', () => {
    if (dialog) {
      dialog.classList.add('hidden');
      dialog.classList.remove('flex');
    }
    currentForm = null;
  });

  // Close on click outside
  dialog?.addEventListener('click', (e) => {
    if (e.target === dialog) {
      dialog.classList.add('hidden');
      dialog.classList.remove('flex');
      currentForm = null;
    }
  });

  // Close on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && dialog && !dialog.classList.contains('hidden')) {
      dialog.classList.add('hidden');
      dialog.classList.remove('flex');
      currentForm = null;
    }
  });
</script>